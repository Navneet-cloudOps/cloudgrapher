{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/collectdata.js","edit.bundle.js","app/scripts/edit.js","app/scripts/findedges.js","app/scripts/queryparser.js","app/scripts/template.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","findEdges","graphOptions","nodes","brokenImage","edges","style","color.highlight","stabilize","zoomExtentOnStabilize","collectData","json","data","knownResources","possibleEdges","addEdge","edge","push","from","this","to","toResource","title","label","resourceKey","Resources","resource","props","Properties","group","Type","toLowerCase","replace","id","shape","image","forEach","filter","indexOf","collectCyData","edgeFilters","AWS::EC2::SecurityGroupIngress","newTarget","source","target","AWS::EC2::SecurityGroupEgress","default","type","parent","get","awsType","edgeIndex","targetProperty","toProperty","classes","./findedges",2,"refreshTimeoutID","graphArea","$","queryTools","remoteInput","showGraphBackGround","hidden","css","myCodeMirror","CodeMirror","document","getElementById","value","lineNumbers","mode","foldGutter","gutters","setSize","template","editor","setValue","getDoc","getValue","cytolib","cytoscape","graphContainer","jsonproxy","jsonp","myConfirmation","event","hasChanged","returnValue","window","confirm","loadTemplate","loadFn","url","templateLocation","val","embedUrl","createEmbedUrl","location","html","alertify","success","reason","setData","error","console","log","ajax","dataType","responseText","changeStyle","delayedRefresh","refreshGraph","toggle","undefined","setOption","onUpdateLinting","annotations","clearTimeout","setTimeout","addEventListener","evt","stopPropagation","preventDefault","dataTransfer","dropEffect","fromFile","files","isResizing","lastDownX","getTemplateUrl","checkValidity","hide","keypress","which","fromURL","click","change","is","show","saveAs","Blob","text","description","saveWindow","open","onload","src","base64Image","setLayout","container","editorPane","on","clientX","offsetRight","width","offset","left","fitGraph","ready","parser","search","onTemplate","./queryparser","./template",3,"findIn","start","found","Array","elem","Object","keys","fn","join","key","k","concat","apply",4,"callbacks","queryMap","URI","CFTemplateURL","host",5,"options","graph","initialData","collector","defaultContainer","cyto","layoutName","JSON","parse","indent","stringify","elements","layout","name","padding","boxSelectionEnabled","onSuccess","onError","dataString","dataObject","file","fail","reader","FileReader","result","readAsText","Description","center","fit","png","full","animate","corsSupport","textStatus","message","status","statusText","changed","./collectdata"],"mappings":"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","file":"edit.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* jshint devel:true */\n/* global exports, require */\nvar findEdges = require('./findedges').findEdges;\nexports.graphOptions = {\n  'nodes': {\n    'brokenImage': 'images/unknown.png'\n  },\n  'edges': {\n    'style': 'arrow',\n    'color.highlight': 'red'\n  },\n  'stabilize': true,\n  'zoomExtentOnStabilize': true\n};\nexports.collectData = function(json) {\n  'use strict';\n  var data = {\n    nodes: [],\n    edges: []\n  };\n  var knownResources = [];\n  var possibleEdges = [];\n  var addEdge = function(edge) {\n    possibleEdges.push({\n      'from': this,\n      'to': edge.toResource,\n      'title': edge.label\n    });\n  };\n\n  for (var resourceKey in json.Resources) {\n    var resource = json.Resources[resourceKey];\n    var props = resource.Properties;\n    var group = resource.Type.toLowerCase().replace(/::/g, '-');\n    knownResources.push(resourceKey);\n    data.nodes.push({\n      'id': resourceKey,\n      'label': resourceKey,\n      'group': group,\n      'shape': 'image',\n      'image': 'images/' + group + '.png'\n    });\n    findEdges(props).forEach(addEdge, resourceKey);\n  }\n  data.edges = possibleEdges.filter(function(edge) {\n    return edge && knownResources.indexOf(edge.to) >= 0;\n  });\n  return data;\n};\n\n\nexports.collectCyData = function(json) {\n  'use strict';\n\n  var knownResources = {};\n  var possibleEdges = [];\n  var edgeFilters = {\n    'AWS::EC2::SecurityGroupIngress': function(edge /*, source, target*/ ) {\n      if (edge.data.title === 'GroupId') {\n        // NOOP the direction is good\n      }\n      else if (edge.data.title === 'SourceSecurityGroupId') {\n        var newTarget = edge.data.source;\n        edge.data.source = edge.data.target;\n        edge.data.target = newTarget;\n      }\n      return true;\n    },\n    'AWS::EC2::SecurityGroupEgress': function(edge /*, source, target*/ ) {\n      if (edge.data.title === 'DestinationSecurityGroupId') {\n        // NOOP the direction is good\n      }\n      else if (edge.data.title === 'GroupId') {\n        var newTarget = edge.data.source;\n        edge.data.source = edge.data.target;\n        edge.data.target = newTarget;\n      }\n      return true;\n    },\n    'default': function(edge, source, target) {\n      if (target && target.type === 'AWS::EC2::SecurityGroup' && source.type !== 'AWS::EC2::SecurityGroup') {\n        knownResources[edge.data.source].data.parent = edge.data.target;\n        return false;\n      }\n      return true;\n    },\n    'get': function(awsType) {\n      return this[awsType] || this['default'];\n    }\n  };\n  var data = {\n    nodes: [],\n    edges: []\n  };\n  var edgeIndex = 0;\n  var addEdge = function(edge) {\n    possibleEdges.push({\n      data: {\n        id: 'e' + (edgeIndex++),\n        source: this,\n        target: edge.toResource,\n        title: edge.label,\n        targetProperty: edge.toProperty\n      }\n    });\n  };\n\n  for (var resourceKey in json.Resources) {\n    var resource = json.Resources[resourceKey];\n    var r = {\n      data: {\n        id: resourceKey\n      },\n      classes: resource.Type.toLowerCase().replace(/::/g, '-'),\n      type: resource.Type\n    };\n    findEdges(resource.Properties).forEach(addEdge, resourceKey);\n    knownResources[resourceKey] = r;\n    data.nodes.push(r);\n  }\n\n  data.edges = possibleEdges.filter(function(edge) {\n    var source = knownResources[edge.data.source];\n    var target = knownResources[edge.data.target];\n    var filter = edgeFilters.get(source.type);\n    return edge && source && target && filter(edge, source, target);\n  });\n\n  return data;\n};\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* jshint devel:true */\n/* global exports, require */\nvar findEdges = require('./findedges').findEdges;\nexports.graphOptions = {\n  'nodes': {\n    'brokenImage': 'images/unknown.png'\n  },\n  'edges': {\n    'style': 'arrow',\n    'color.highlight': 'red'\n  },\n  'stabilize': true,\n  'zoomExtentOnStabilize': true\n};\nexports.collectData = function(json) {\n  'use strict';\n  var data = {\n    nodes: [],\n    edges: []\n  };\n  var knownResources = [];\n  var possibleEdges = [];\n  var addEdge = function(edge) {\n    possibleEdges.push({\n      'from': this,\n      'to': edge.toResource,\n      'title': edge.label\n    });\n  };\n\n  for (var resourceKey in json.Resources) {\n    var resource = json.Resources[resourceKey];\n    var props = resource.Properties;\n    var group = resource.Type.toLowerCase().replace(/::/g, '-');\n    knownResources.push(resourceKey);\n    data.nodes.push({\n      'id': resourceKey,\n      'label': resourceKey,\n      'group': group,\n      'shape': 'image',\n      'image': 'images/' + group + '.png'\n    });\n    findEdges(props).forEach(addEdge, resourceKey);\n  }\n  data.edges = possibleEdges.filter(function(edge) {\n    return edge && knownResources.indexOf(edge.to) >= 0;\n  });\n  return data;\n};\n\n\nexports.collectCyData = function(json) {\n  'use strict';\n\n  var knownResources = {};\n  var possibleEdges = [];\n  var edgeFilters = {\n    'AWS::EC2::SecurityGroupIngress': function(edge /*, source, target*/ ) {\n      if (edge.data.title === 'GroupId') {\n        // NOOP the direction is good\n      }\n      else if (edge.data.title === 'SourceSecurityGroupId') {\n        var newTarget = edge.data.source;\n        edge.data.source = edge.data.target;\n        edge.data.target = newTarget;\n      }\n      return true;\n    },\n    'AWS::EC2::SecurityGroupEgress': function(edge /*, source, target*/ ) {\n      if (edge.data.title === 'DestinationSecurityGroupId') {\n        // NOOP the direction is good\n      }\n      else if (edge.data.title === 'GroupId') {\n        var newTarget = edge.data.source;\n        edge.data.source = edge.data.target;\n        edge.data.target = newTarget;\n      }\n      return true;\n    },\n    'default': function(edge, source, target) {\n      if (target && target.type === 'AWS::EC2::SecurityGroup' && source.type !== 'AWS::EC2::SecurityGroup') {\n        knownResources[edge.data.source].data.parent = edge.data.target;\n        return false;\n      }\n      return true;\n    },\n    'get': function(awsType) {\n      return this[awsType] || this['default'];\n    }\n  };\n  var data = {\n    nodes: [],\n    edges: []\n  };\n  var edgeIndex = 0;\n  var addEdge = function(edge) {\n    possibleEdges.push({\n      data: {\n        id: 'e' + (edgeIndex++),\n        source: this,\n        target: edge.toResource,\n        title: edge.label,\n        targetProperty: edge.toProperty\n      }\n    });\n  };\n\n  for (var resourceKey in json.Resources) {\n    var resource = json.Resources[resourceKey];\n    var r = {\n      data: {\n        id: resourceKey\n      },\n      classes: resource.Type.toLowerCase().replace(/::/g, '-'),\n      type: resource.Type\n    };\n    findEdges(resource.Properties).forEach(addEdge, resourceKey);\n    knownResources[resourceKey] = r;\n    data.nodes.push(r);\n  }\n\n  data.edges = possibleEdges.filter(function(edge) {\n    var source = knownResources[edge.data.source];\n    var target = knownResources[edge.data.target];\n    var filter = edgeFilters.get(source.type);\n    return edge && source && target && filter(edge, source, target);\n  });\n\n  return data;\n};\n\n},{\"./findedges\":3}],2:[function(require,module,exports){\n/* jshint devel:true */\n/* global saveAs, require, CodeMirror, alertify, cytoscape */\n\n(function() {\n  'use strict';\n\n  var graphArea = $('#graph_area');\n  var refreshTimeoutID;\n\n  var queryTools = require('./queryparser');\n\n  var remoteInput = $('#remote_input');\n\n  var showGraphBackGround = function (hidden) {\n    graphArea.css('background-image', !hidden ? 'url(\"images/aws-cloudformation-template.svg\")' : '');\n  };\n\n  var myCodeMirror = new CodeMirror(document.getElementById('editor'), {\n    value: '{}',\n    lineNumbers: true,\n    mode: 'application/json',\n    foldGutter: true,\n    gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\n\n  });\n  myCodeMirror.setSize('100%', '800px');\n\n  var template = require('./template').template({\n    'editor': {\n      setValue: function(value) { myCodeMirror.getDoc().setValue(value); },\n      getValue: function() { return myCodeMirror.getDoc().getValue(); }\n    },\n    'cytolib': cytoscape,\n    'graphContainer': graphArea[0],\n    'jsonproxy': $.jsonp\n  });\n\n  var myConfirmation = function(event) {\n    if (!template.hasChanged()) {\n      return undefined;\n    }\n    if (event && event.type === 'beforeunload') {\n      event.returnValue = 'The current template has unsaved changes.';\n      return 'The current template has unsaved changes.';\n    }\n    return window.confirm('The current template has unsaved changes. Continue loading?');\n  };\n\n  var loadTemplate = function(loadFn, url) {\n    if (!url || (template.hasChanged() && !myConfirmation())) {\n      return;\n    }\n    loadFn(\n      url,\n      function(templateLocation) {\n        showGraphBackGround(true);\n        if (typeof url === 'string') {\n          if (remoteInput.val() !== url) {\n            remoteInput.val(url);\n          }\n          var embedUrl = queryTools.createEmbedUrl(window.location, url);\n          $('#embed_link').html('Use <a href=\"' + embedUrl + '\">' + embedUrl + '</a> to open directly');\n        }\n        else {\n          remoteInput.val('');\n          $('#embed_link').html('');\n        }\n        alertify.success('Loaded template \"' + templateLocation + '\" successfully');\n      },\n      function(templateLocation, reason, e) {\n        template.setData('{\"Error\": \"Unable to load template ' + templateLocation + ' because of ' + reason + '\" }', showGraphBackGround);\n        alertify.error('Unable to load template \"' + templateLocation + '\" because of ' + reason);\n        console.log(e);\n      }\n    );\n  };\n\n  $.ajax({\n    url: 'styles/main.cycss',\n    type: 'GET',\n    dataType: 'text',\n    success: function(responseText) {\n      template.changeStyle(responseText);\n    }\n  });\n\n  var delayedRefresh = function() {\n    template.refreshGraph();\n    $('#embed_link').toggle(!template.hasChanged());\n    refreshTimeoutID = undefined;\n  };\n\n  myCodeMirror.setOption('lint', {\n    onUpdateLinting: function(annotations) {\n      if (template && (!annotations || annotations.length === 0)) {\n        if (refreshTimeoutID) {\n          window.clearTimeout(refreshTimeoutID);\n        }\n        refreshTimeoutID = window.setTimeout(delayedRefresh, 300);\n      }\n    }\n  });\n\n  graphArea[0].addEventListener('dragover', function(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n    evt.dataTransfer.dropEffect = 'copy';\n  }, false);\n  graphArea[0].addEventListener('drop', function(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n    loadTemplate(template.fromFile, evt.dataTransfer.files[0]);\n  }, false);\n\n\n  var isResizing = false,\n    lastDownX = 0;\n\n\n  var getTemplateUrl = function () {\n    var url = remoteInput.val();\n    if (remoteInput[0].checkValidity()){\n      remoteInput.hide();\n      return url;\n    }\n    return undefined;\n  };\n\n\n  $('#remote_input').keypress(function(e) {\n    if (e.which === 13) {\n      loadTemplate(template.fromURL, getTemplateUrl());\n      return false;\n    }\n  });\n\n  $('#open_template').click(function(event) {\n    event.preventDefault();\n    $('#template_input').click();\n  });\n  $('#template_input').change(function(event) {\n    loadTemplate(template.fromFile, event.target.files[0]);\n  });\n\n  $('#open_url').click(function(event) {\n    event.preventDefault();\n    if (remoteInput.is(':visible')) {\n      loadTemplate(template.fromURL, getTemplateUrl());\n    }\n    else {\n      remoteInput.show();\n    }\n  });\n\n  $('#save_template').click(function(event) {\n    event.preventDefault();\n    saveAs(\n      new Blob( [template.text(2)], { type: 'text/plain;charset=utf-8' }),\n      template.description() + '.json'\n    );\n    return false;\n  });\n  $('#save_graph').click(function(event) {\n    event.preventDefault();\n    var saveWindow = window.open('savegraph.html');\n    saveWindow.onload = function() {\n      saveWindow.document.getElementById('graphPNG').src = template.base64Image();\n    };\n    return false;\n  });\n  $('#graph_layout').change(function() {\n    template.setLayout($('#graph_layout').val());\n  });\n\n  var container = $('#container'),\n    editorPane = $('#editor_pane');\n\n  $('#border').on('mousedown', function(e) {\n    isResizing = true;\n    lastDownX = e.clientX;\n  });\n\n  $(document).on('mousemove', function(e) {\n    // we don't want to do anything if we aren't resizing.\n    if (!isResizing) {\n      return;\n    }\n\n    var offsetRight = container.width() - (e.clientX - container.offset().left);\n\n    graphArea.css('right', offsetRight);\n    editorPane.css('width', offsetRight);\n  }).on('mouseup', function() {\n    if (isResizing) {\n      template.fitGraph();\n    }\n    // stop resizing\n    isResizing = false;\n  });\n\n  $(document).ready(function() {\n    showGraphBackGround();\n    //----- Parse Query -----//\n    queryTools.parser(window.location.search, {\n      onTemplate: function(url) {\n        loadTemplate(template.fromURL, url);\n      }\n    });\n    //----- Parse Query -----//\n\n    window.addEventListener('beforeunload', myConfirmation);\n  });\n})();\n\n},{\"./queryparser\":4,\"./template\":5}],3:[function(require,module,exports){\n/* jshint devel:true */\n/* global exports */\n\n// findEdges/findIn\n//  - startElement element to traverse through\n//  - title        resource title to push to callback function\n// returns an array of edge objects with properties label, toResource and toProperty\n//\nexports.findEdges = function findIn (start, title) {\n  'use strict';\n  var found = [];\n  // If start is an array then let's loop through all elements to find edges\n  //\n  if (start instanceof Array) {\n    start.forEach(function(elem){\n      found.push( findIn(elem, title || '') );\n    });\n  }\n  // Else if we hit some object and we should delve into it\n  //\n  else if (typeof start === 'object') {\n    // When we only have one key then it's probably some CloudFormation function\n    // we can use to make an make edge with\n    //\n    if (Object.keys(start).length === 1) {\n      var fn = Object.keys(start)[0];\n      // If we hit a Ref, it's definitely a reference of some sorts\n      // usually we only hit this option deep and the title should be available\n      // otherwise give an empty title\n      //\n      if (fn === 'Ref' && typeof start[fn] === 'string') {\n        found.push({label: title || '', toResource: start[fn], toProperty: title || ''});\n      }\n      // An Fn::Join is trickier, we might find edges recursively\n      //\n      else if (fn === 'Fn::Join' && start[fn] instanceof Array) {\n        start[fn][1].forEach(function(elem) {\n          found.push( findIn(elem, start[fn][1].join(start[fn][0])) );\n        });\n      }\n      // If we see an Fn::GetAtt then make an edge with the reference,\n      // not the attribute\n      //\n      else if (fn === 'Fn::GetAtt' && start[fn] instanceof Array) {\n        found.push({label: title, toResource: start[fn][0], toProperty: start[fn][1]});\n      }\n      // Ok, forgot why this path is necessary, I guess it's when we didn't find\n      //  something to easily pull references from and we probably need to keep\n      //  searching anyway\n      //\n      else {\n        for (var key in start) {\n          found.push( findIn(start[key],  key) );\n        }\n      }\n    }\n    // if we have more than one key we have to delve deeper to find edges\n    //\n    else {\n      for (var k in start) {\n        found.push( findIn(start[k], k) );\n      }\n    }\n  }\n  return [].concat.apply([], found); // return a flattened array http://stackoverflow.com/a/10865042/60201\n};\n\n},{}],4:[function(require,module,exports){\n/* jshint devel:true */\n/* global exports, URI */\n\nexports.parser = function(url, callbacks) {\n    'use strict';\n    if (url) {\n        var queryMap = new URI(url).search(true);\n        if (queryMap.CFTemplateURL && callbacks.onTemplate) {\n            callbacks.onTemplate(queryMap.CFTemplateURL);\n        }\n    }\n};\n\nexports.createEmbedUrl = function(host, target) {\n    'use strict';\n    return new URI(host).search(function(data) {\n        data.CFTemplateURL = target;\n    });\n};\n},{}],5:[function(require,module,exports){\n/* jshint devel:true */\n/* global exports, require, cytoscape */\n\nexports.template = function(options) {\n  'use strict';\n\n  var editor = options.editor;\n  var collector = require('./collectdata');\n  var defaultContainer = options.graphContainer;\n  var jsonproxy = options.jsonproxy;\n  var graph;\n  var style;\n  var cyto = options.cytolib || cytoscape;\n  var initialData;\n  var layoutName = 'grid';\n\n  if (!editor || !editor.getValue) {\n    throw 'editor unavailable or doesn\\'t support getValue';\n  }\n  if (!cyto) {\n    throw 'graphing library Cytoscape unavailable';\n  }\n\n  var json = function() {\n    return JSON.parse(editor.getValue());\n  };\n\n  var text = function(indent) {\n    return indent ? JSON.stringify(json(), null, indent) : editor.getValue();\n  };\n\n  var changeStyle = function(data) {\n    style = data;\n    if (graph) {\n      graph.style(style);\n    }\n  };\n\n  var show = function(data, container) {\n    if (!container && !defaultContainer) {\n      throw 'No container available to show data';\n    }\n    graph = cyto({\n      container: container || defaultContainer,\n      elements: data,\n      style: style,\n      layout: {\n        name: layoutName,\n        padding: 5\n      }\n    });\n    graph.boxSelectionEnabled(true);\n  };\n\n  var setData = function(data, onSuccess, onError) {\n    if (data) {\n      try {\n        var dataString = typeof data === 'string' ? data : JSON.stringify(data, null, 2);\n        var dataObject = typeof data === 'object' ? data : JSON.parse(data);\n\n        editor.setValue(dataString);\n        initialData = text();\n        show(collector.collectCyData(dataObject));\n\n        if (onSuccess) {\n          onSuccess();\n        }\n      }\n      catch (e) {\n        if (onError) {\n          onError('Error processing data as JSON', e);\n        }\n      }\n    }\n    else {\n      if (onError) {\n        onError('No data');\n      }\n    }\n  };\n\n  var fromFile = function(file, success, fail) {\n    var reader = new FileReader();\n    reader.onload = function() {\n      setData(reader.result, function() {\n        if (success) {\n          success(file.name);\n        }\n      }, function(reason, e) {\n        if (fail) {\n          fail(file.name, reason, e);\n        }\n      });\n\n    };\n    try {\n      reader.readAsText(file);\n    }\n    catch (e) {\n      if (fail) {\n        fail(file.name, e);\n      }\n    }\n  };\n\n  var refreshGraph = function() {\n    show(collector.collectCyData(json()));\n  };\n\n  var description = function() {\n    var description = 'template';\n    try {\n      description = json().Description;\n    }\n    catch (e) {}\n    return description;\n  };\n\n  var base64Image = function() {\n    if (!graph) {\n      return;\n    }\n    graph.center();\n    graph.fit();\n    return graph.png({\n      full: false\n    });\n  };\n\n  var setLayout = function(name) {\n    layoutName = name;\n    if (graph) {\n      graph.layout({\n        'name': name,\n        'fit': true,\n        'animate': false\n      });\n    }\n  };\n\n  var fromURL = function(url, success, onError) {\n    if (!jsonproxy) {\n      throw 'No jsonproxy available to request URLs';\n    }\n    if (url) {\n      jsonproxy({\n        url: url,\n        corsSupport: true,\n        success: function(data) {\n          setData(data);\n          if (success) {\n            success(url);\n          }\n        },\n        error: function(data, textStatus) {\n            var message;\n            if (textStatus === 'parsererror') {\n              editor.setValue(data.responseText);\n              message = 'Unable to parse the result as valid JSON';\n            }\n            else {\n              message = 'Unable to load: status ' + data.status + ' ' + data.statusText;\n            }\n            if (onError) {\n              onError(url, message, data, textStatus);\n            }\n          }\n          // error, etc.\n      });\n    }\n  };\n\n  var fitGraph = function() {\n    if (graph) {\n      graph.fit();\n    }\n  };\n\n  var hasChanged = function() {\n    var changed = initialData === text();\n    return initialData ? ! changed : false;\n  };\n\n  return {\n    setData: setData,\n    fromFile: fromFile,\n    fromURL: fromURL,\n    refreshGraph: refreshGraph,\n    setLayout: setLayout,\n    base64Image: base64Image,\n    description: description,\n    changeStyle: changeStyle,\n    fitGraph: fitGraph,\n    text: text,\n    json: json,\n    hasChanged: hasChanged,\n    initialData: initialData\n  };\n};\n\n},{\"./collectdata\":1}]},{},[2])\n\n","/* jshint devel:true */\n/* global saveAs, require, CodeMirror, alertify, cytoscape */\n\n(function() {\n  'use strict';\n\n  var graphArea = $('#graph_area');\n  var refreshTimeoutID;\n\n  var queryTools = require('./queryparser');\n\n  var remoteInput = $('#remote_input');\n\n  var showGraphBackGround = function (hidden) {\n    graphArea.css('background-image', !hidden ? 'url(\"images/aws-cloudformation-template.svg\")' : '');\n  };\n\n  var myCodeMirror = new CodeMirror(document.getElementById('editor'), {\n    value: '{}',\n    lineNumbers: true,\n    mode: 'application/json',\n    foldGutter: true,\n    gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\n\n  });\n  myCodeMirror.setSize('100%', '800px');\n\n  var template = require('./template').template({\n    'editor': {\n      setValue: function(value) { myCodeMirror.getDoc().setValue(value); },\n      getValue: function() { return myCodeMirror.getDoc().getValue(); }\n    },\n    'cytolib': cytoscape,\n    'graphContainer': graphArea[0],\n    'jsonproxy': $.jsonp\n  });\n\n  var myConfirmation = function(event) {\n    if (!template.hasChanged()) {\n      return undefined;\n    }\n    if (event && event.type === 'beforeunload') {\n      event.returnValue = 'The current template has unsaved changes.';\n      return 'The current template has unsaved changes.';\n    }\n    return window.confirm('The current template has unsaved changes. Continue loading?');\n  };\n\n  var loadTemplate = function(loadFn, url) {\n    if (!url || (template.hasChanged() && !myConfirmation())) {\n      return;\n    }\n    loadFn(\n      url,\n      function(templateLocation) {\n        showGraphBackGround(true);\n        if (typeof url === 'string') {\n          if (remoteInput.val() !== url) {\n            remoteInput.val(url);\n          }\n          var embedUrl = queryTools.createEmbedUrl(window.location, url);\n          $('#embed_link').html('Use <a href=\"' + embedUrl + '\">' + embedUrl + '</a> to open directly');\n        }\n        else {\n          remoteInput.val('');\n          $('#embed_link').html('');\n        }\n        alertify.success('Loaded template \"' + templateLocation + '\" successfully');\n      },\n      function(templateLocation, reason, e) {\n        template.setData('{\"Error\": \"Unable to load template ' + templateLocation + ' because of ' + reason + '\" }', showGraphBackGround);\n        alertify.error('Unable to load template \"' + templateLocation + '\" because of ' + reason);\n        console.log(e);\n      }\n    );\n  };\n\n  $.ajax({\n    url: 'styles/main.cycss',\n    type: 'GET',\n    dataType: 'text',\n    success: function(responseText) {\n      template.changeStyle(responseText);\n    }\n  });\n\n  var delayedRefresh = function() {\n    template.refreshGraph();\n    $('#embed_link').toggle(!template.hasChanged());\n    refreshTimeoutID = undefined;\n  };\n\n  myCodeMirror.setOption('lint', {\n    onUpdateLinting: function(annotations) {\n      if (template && (!annotations || annotations.length === 0)) {\n        if (refreshTimeoutID) {\n          window.clearTimeout(refreshTimeoutID);\n        }\n        refreshTimeoutID = window.setTimeout(delayedRefresh, 300);\n      }\n    }\n  });\n\n  graphArea[0].addEventListener('dragover', function(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n    evt.dataTransfer.dropEffect = 'copy';\n  }, false);\n  graphArea[0].addEventListener('drop', function(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n    loadTemplate(template.fromFile, evt.dataTransfer.files[0]);\n  }, false);\n\n\n  var isResizing = false,\n    lastDownX = 0;\n\n\n  var getTemplateUrl = function () {\n    var url = remoteInput.val();\n    if (remoteInput[0].checkValidity()){\n      remoteInput.hide();\n      return url;\n    }\n    return undefined;\n  };\n\n\n  $('#remote_input').keypress(function(e) {\n    if (e.which === 13) {\n      loadTemplate(template.fromURL, getTemplateUrl());\n      return false;\n    }\n  });\n\n  $('#open_template').click(function(event) {\n    event.preventDefault();\n    $('#template_input').click();\n  });\n  $('#template_input').change(function(event) {\n    loadTemplate(template.fromFile, event.target.files[0]);\n  });\n\n  $('#open_url').click(function(event) {\n    event.preventDefault();\n    if (remoteInput.is(':visible')) {\n      loadTemplate(template.fromURL, getTemplateUrl());\n    }\n    else {\n      remoteInput.show();\n    }\n  });\n\n  $('#save_template').click(function(event) {\n    event.preventDefault();\n    saveAs(\n      new Blob( [template.text(2)], { type: 'text/plain;charset=utf-8' }),\n      template.description() + '.json'\n    );\n    return false;\n  });\n  $('#save_graph').click(function(event) {\n    event.preventDefault();\n    var saveWindow = window.open('savegraph.html');\n    saveWindow.onload = function() {\n      saveWindow.document.getElementById('graphPNG').src = template.base64Image();\n    };\n    return false;\n  });\n  $('#graph_layout').change(function() {\n    template.setLayout($('#graph_layout').val());\n  });\n\n  var container = $('#container'),\n    editorPane = $('#editor_pane');\n\n  $('#border').on('mousedown', function(e) {\n    isResizing = true;\n    lastDownX = e.clientX;\n  });\n\n  $(document).on('mousemove', function(e) {\n    // we don't want to do anything if we aren't resizing.\n    if (!isResizing) {\n      return;\n    }\n\n    var offsetRight = container.width() - (e.clientX - container.offset().left);\n\n    graphArea.css('right', offsetRight);\n    editorPane.css('width', offsetRight);\n  }).on('mouseup', function() {\n    if (isResizing) {\n      template.fitGraph();\n    }\n    // stop resizing\n    isResizing = false;\n  });\n\n  $(document).ready(function() {\n    showGraphBackGround();\n    //----- Parse Query -----//\n    queryTools.parser(window.location.search, {\n      onTemplate: function(url) {\n        loadTemplate(template.fromURL, url);\n      }\n    });\n    //----- Parse Query -----//\n\n    window.addEventListener('beforeunload', myConfirmation);\n  });\n})();\n","/* jshint devel:true */\n/* global exports */\n\n// findEdges/findIn\n//  - startElement element to traverse through\n//  - title        resource title to push to callback function\n// returns an array of edge objects with properties label, toResource and toProperty\n//\nexports.findEdges = function findIn (start, title) {\n  'use strict';\n  var found = [];\n  // If start is an array then let's loop through all elements to find edges\n  //\n  if (start instanceof Array) {\n    start.forEach(function(elem){\n      found.push( findIn(elem, title || '') );\n    });\n  }\n  // Else if we hit some object and we should delve into it\n  //\n  else if (typeof start === 'object') {\n    // When we only have one key then it's probably some CloudFormation function\n    // we can use to make an make edge with\n    //\n    if (Object.keys(start).length === 1) {\n      var fn = Object.keys(start)[0];\n      // If we hit a Ref, it's definitely a reference of some sorts\n      // usually we only hit this option deep and the title should be available\n      // otherwise give an empty title\n      //\n      if (fn === 'Ref' && typeof start[fn] === 'string') {\n        found.push({label: title || '', toResource: start[fn], toProperty: title || ''});\n      }\n      // An Fn::Join is trickier, we might find edges recursively\n      //\n      else if (fn === 'Fn::Join' && start[fn] instanceof Array) {\n        start[fn][1].forEach(function(elem) {\n          found.push( findIn(elem, start[fn][1].join(start[fn][0])) );\n        });\n      }\n      // If we see an Fn::GetAtt then make an edge with the reference,\n      // not the attribute\n      //\n      else if (fn === 'Fn::GetAtt' && start[fn] instanceof Array) {\n        found.push({label: title, toResource: start[fn][0], toProperty: start[fn][1]});\n      }\n      // Ok, forgot why this path is necessary, I guess it's when we didn't find\n      //  something to easily pull references from and we probably need to keep\n      //  searching anyway\n      //\n      else {\n        for (var key in start) {\n          found.push( findIn(start[key],  key) );\n        }\n      }\n    }\n    // if we have more than one key we have to delve deeper to find edges\n    //\n    else {\n      for (var k in start) {\n        found.push( findIn(start[k], k) );\n      }\n    }\n  }\n  return [].concat.apply([], found); // return a flattened array http://stackoverflow.com/a/10865042/60201\n};\n","/* jshint devel:true */\n/* global exports, URI */\n\nexports.parser = function(url, callbacks) {\n    'use strict';\n    if (url) {\n        var queryMap = new URI(url).search(true);\n        if (queryMap.CFTemplateURL && callbacks.onTemplate) {\n            callbacks.onTemplate(queryMap.CFTemplateURL);\n        }\n    }\n};\n\nexports.createEmbedUrl = function(host, target) {\n    'use strict';\n    return new URI(host).search(function(data) {\n        data.CFTemplateURL = target;\n    });\n};","/* jshint devel:true */\n/* global exports, require, cytoscape */\n\nexports.template = function(options) {\n  'use strict';\n\n  var editor = options.editor;\n  var collector = require('./collectdata');\n  var defaultContainer = options.graphContainer;\n  var jsonproxy = options.jsonproxy;\n  var graph;\n  var style;\n  var cyto = options.cytolib || cytoscape;\n  var initialData;\n  var layoutName = 'grid';\n\n  if (!editor || !editor.getValue) {\n    throw 'editor unavailable or doesn\\'t support getValue';\n  }\n  if (!cyto) {\n    throw 'graphing library Cytoscape unavailable';\n  }\n\n  var json = function() {\n    return JSON.parse(editor.getValue());\n  };\n\n  var text = function(indent) {\n    return indent ? JSON.stringify(json(), null, indent) : editor.getValue();\n  };\n\n  var changeStyle = function(data) {\n    style = data;\n    if (graph) {\n      graph.style(style);\n    }\n  };\n\n  var show = function(data, container) {\n    if (!container && !defaultContainer) {\n      throw 'No container available to show data';\n    }\n    graph = cyto({\n      container: container || defaultContainer,\n      elements: data,\n      style: style,\n      layout: {\n        name: layoutName,\n        padding: 5\n      }\n    });\n    graph.boxSelectionEnabled(true);\n  };\n\n  var setData = function(data, onSuccess, onError) {\n    if (data) {\n      try {\n        var dataString = typeof data === 'string' ? data : JSON.stringify(data, null, 2);\n        var dataObject = typeof data === 'object' ? data : JSON.parse(data);\n\n        editor.setValue(dataString);\n        initialData = text();\n        show(collector.collectCyData(dataObject));\n\n        if (onSuccess) {\n          onSuccess();\n        }\n      }\n      catch (e) {\n        if (onError) {\n          onError('Error processing data as JSON', e);\n        }\n      }\n    }\n    else {\n      if (onError) {\n        onError('No data');\n      }\n    }\n  };\n\n  var fromFile = function(file, success, fail) {\n    var reader = new FileReader();\n    reader.onload = function() {\n      setData(reader.result, function() {\n        if (success) {\n          success(file.name);\n        }\n      }, function(reason, e) {\n        if (fail) {\n          fail(file.name, reason, e);\n        }\n      });\n\n    };\n    try {\n      reader.readAsText(file);\n    }\n    catch (e) {\n      if (fail) {\n        fail(file.name, e);\n      }\n    }\n  };\n\n  var refreshGraph = function() {\n    show(collector.collectCyData(json()));\n  };\n\n  var description = function() {\n    var description = 'template';\n    try {\n      description = json().Description;\n    }\n    catch (e) {}\n    return description;\n  };\n\n  var base64Image = function() {\n    if (!graph) {\n      return;\n    }\n    graph.center();\n    graph.fit();\n    return graph.png({\n      full: false\n    });\n  };\n\n  var setLayout = function(name) {\n    layoutName = name;\n    if (graph) {\n      graph.layout({\n        'name': name,\n        'fit': true,\n        'animate': false\n      });\n    }\n  };\n\n  var fromURL = function(url, success, onError) {\n    if (!jsonproxy) {\n      throw 'No jsonproxy available to request URLs';\n    }\n    if (url) {\n      jsonproxy({\n        url: url,\n        corsSupport: true,\n        success: function(data) {\n          setData(data);\n          if (success) {\n            success(url);\n          }\n        },\n        error: function(data, textStatus) {\n            var message;\n            if (textStatus === 'parsererror') {\n              editor.setValue(data.responseText);\n              message = 'Unable to parse the result as valid JSON';\n            }\n            else {\n              message = 'Unable to load: status ' + data.status + ' ' + data.statusText;\n            }\n            if (onError) {\n              onError(url, message, data, textStatus);\n            }\n          }\n          // error, etc.\n      });\n    }\n  };\n\n  var fitGraph = function() {\n    if (graph) {\n      graph.fit();\n    }\n  };\n\n  var hasChanged = function() {\n    var changed = initialData === text();\n    return initialData ? ! changed : false;\n  };\n\n  return {\n    setData: setData,\n    fromFile: fromFile,\n    fromURL: fromURL,\n    refreshGraph: refreshGraph,\n    setLayout: setLayout,\n    base64Image: base64Image,\n    description: description,\n    changeStyle: changeStyle,\n    fitGraph: fitGraph,\n    text: text,\n    json: json,\n    hasChanged: hasChanged,\n    initialData: initialData\n  };\n};\n"],"sourceRoot":"/source/"}