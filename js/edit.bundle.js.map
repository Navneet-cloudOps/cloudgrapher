{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/collectdata.js","edit.bundle.js","app/scripts/edit.js","app/scripts/findedges.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","findEdges","graphOptions","nodes","brokenImage","edges","style","color.highlight","stabilize","zoomExtentOnStabilize","collectData","json","data","knownResources","possibleEdges","addEdge","toId","title","push","from","resourceKey","to","Resources","resource","props","Properties","group","Type","toLowerCase","replace","id","label","shape","image","filter","edge","indexOf","collectCyData","edgeFilters","AWS::EC2::SecurityGroupIngress","newTarget","source","target","AWS::EC2::SecurityGroupEgress","default","type","parent","get","awsType","this","edgeIndex","classes","./findedges",2,"editor","graph","graphPane","collector","graphStyleP","$","ajax","url","dataType","ace","edit","setTheme","getSession","setMode","setOption","on","annotations","getAnnotations","toggleClass","message","getLength","getLine","text","firstAnnotation","row","column","StatusBar","document","getElementById","commands","addCommand","name","bindKey","win","mac","exec","config","loadModule","init","showKeyboardShortcuts","loadTemplate","file","reader","FileReader","onload","result","setValue","navigateTo","resize","readAsText","showCyGraph","JSON","parse","getValue","console","log","cytoscape","container","elements","layout","padding","fadeIn","getTemplateDescription","description","Description","saveImage","saveWindow","window","open","src","png","saveTemplate","prettyDoc","stringify","blob","Blob","saveAs","mainRow","addEventListener","evt","stopPropagation","preventDefault","dataTransfer","dropEffect","files","change","event","click","fadeOut","val","./collectdata",3,"findIn","start","makeEdge","Array","forEach","elem","Object","keys","fn","join","key","k"],"mappings":"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","file":"edit.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* jshint devel:true */\n/* global exports, require */\nvar findEdges = require('./findedges').findEdges;\nexports.graphOptions = {\n  'nodes': {\n    'brokenImage': 'images/unknown.png'\n  },\n  'edges': {\n    'style' : 'arrow',\n    'color.highlight': 'red'\n  },\n  'stabilize': true,\n  'zoomExtentOnStabilize': true\n};\nexports.collectData = function(json) {\n  'use strict';\n  var data = { nodes:[], edges:[] };\n  var knownResources = [];\n  var possibleEdges = [];\n  var addEdge = function (toId, title){\n    possibleEdges.push( {'from': resourceKey, 'to': toId, 'title': title } );\n  };\n  for (var resourceKey in json.Resources) {\n    var resource = json.Resources[resourceKey];\n    var props = resource.Properties;\n    var group = resource.Type.toLowerCase().replace(/::/g,'-');\n    knownResources.push(resourceKey);\n    data.nodes.push({\n      'id'   : resourceKey,\n      'label': resourceKey,\n      'group': group,\n      'shape': 'image',\n      'image': 'images/' + group + '.png'\n    });\n    findEdges(props, addEdge);\n  }\n  data.edges = possibleEdges.filter(function(edge) {\n    return edge && knownResources.indexOf(edge.to) >= 0;\n  });\n  return data;\n};\n\n\nexports.collectCyData = function(json) {\n  'use strict';\n  var edgeFilters = {\n    'AWS::EC2::SecurityGroupIngress': function(edge /*, source, target*/){\n      if (edge.data.resource === 'GroupId') {\n        // NOOP the direction is good\n      }\n      else if (edge.data.resource === 'SourceSecurityGroupId') {\n        var newTarget = edge.data.source;\n        edge.data.source = edge.data.target;\n        edge.data.target = newTarget;\n      }\n      return true;\n    },\n    'AWS::EC2::SecurityGroupEgress': function(edge /*, source, target*/) {\n      if (edge.data.resource === 'DestinationSecurityGroupId') {\n        // NOOP the direction is good\n      }\n      else if (edge.data.resource === 'GroupId') {\n        var newTarget = edge.data.source;\n        edge.data.source = edge.data.target;\n        edge.data.target = newTarget;\n      }\n      return true;\n    },\n    'default': function(edge, source, target) {\n      if (target && target.type === 'AWS::EC2::SecurityGroup'){\n        knownResources[edge.data.source].data.parent = edge.data.target;\n        return false;\n      }\n      return true;\n    },\n    'get': function(awsType) {\n      return this[awsType] || this['default'];\n    }\n  };\n  var data = { nodes:[], edges:[] };\n  var edgeIndex = 0;\n\n  var addEdge = function (toId, title, resource) {\n    possibleEdges.push({ data: { id: 'e'+ (edgeIndex++), source: resourceKey, target: toId, title: title, resource: resource }});\n  };\n\n  var knownResources = {};\n  var possibleEdges = [];\n\n  for (var resourceKey in json.Resources) {\n    var resource = json.Resources[resourceKey];\n    var r = {\n      data: {\n        id: resourceKey\n      },\n      classes: resource.Type.toLowerCase().replace(/::/g,'-'),\n      type: resource.Type\n    };\n    findEdges(resource.Properties, addEdge);\n    knownResources[resourceKey] = r;\n    data.nodes.push(r);\n  }\n\n  data.edges = possibleEdges.filter(function(edge) {\n    var source = knownResources[edge.data.source];\n    var target = knownResources[edge.data.target];\n    var filter = edgeFilters.get(source.type);\n    return edge && source && target && filter(edge, source, target);\n  });\n\n  return data;\n};\n",null,"/* jshint devel:true */\n/* global ace, cytoscape, saveAs, require */\n\n(function(){'use strict';\n  var editor;\n  var collector = require('./collectdata');\n  var graph;\n  var graphPane;\n  var graphStyleP = $.ajax({ url: 'styles/main.cycss', type: 'GET', dataType: 'text' });\n  editor = ace.edit('jsoneditor');\n  editor.setTheme('ace/theme/tomorrow_night_eighties');\n  editor.getSession().setMode('ace/mode/json');\n  editor.setOption('maxLines', 60);\n  editor.setOption('minLines', 40);\n  editor.getSession().on('changeAnnotation', function() {\n    var annotations = editor.getSession().getAnnotations();\n    $('#statusbar').toggleClass('failure', annotations.length !== 0);\n    if (annotations.length === 0) {\n      var message = editor.getSession().getLength() < 2 && editor.getSession().getLine(0).length === 0 ? 'No content' : 'Valid';\n      $('div.status-message').text(message);\n    }\n    else {\n      var firstAnnotation = annotations[0];\n      $('div.status-message').text(firstAnnotation.text + ' at '+ firstAnnotation.row + ':'+ firstAnnotation.column);\n    }\n  });\n  var StatusBar = ace.require('ace/ext/statusbar').StatusBar;\n  // create a simple selection status indicator\n  new StatusBar(editor, document.getElementById('statusbar'));\n  editor.commands.addCommand({\n    name: 'showKeyboardShortcuts',\n    bindKey: {win: 'Ctrl-Alt-h', mac: 'Command-Alt-h'},\n    exec: function(editor) {\n      ace.config.loadModule('ace/ext/keybinding_menu', function(module) {\n        module.init(editor);\n        editor.showKeyboardShortcuts();\n      });\n    }\n  });\n\n  var loadTemplate = function(file){\n    var reader = new FileReader();\n    reader.onload = function () {\n      var data = reader.result;\n      if(data) {\n        editor.setValue(data);\n        editor.navigateTo(0, 0);\n      }\n      editor.resize();\n    };\n    reader.readAsText(file);\n  };\n  var showCyGraph = function() {\n    var data;\n    try {\n      data = collector.collectCyData(JSON.parse(editor.getValue()));\n    }\n    catch (e) {\n      data = {};\n    }\n    console.log(data);\n    if (!graphPane) {\n      graphPane = $('div.graph_overlay');\n    }\n    graph = cytoscape({\n      container: document.getElementById('graph_area'),\n      elements: data,\n      style: graphStyleP,\n      layout: {\n        name: 'cose',\n        padding: 5\n      }\n    });\n    graphPane.fadeIn(300);\n  };\n  var getTemplateDescription = function() {\n    var description = 'template';\n    try {\n      description = JSON.parse(editor.getValue(editor.getValue())).Description;\n    } catch (e) {}\n    return description;\n  };\n  var saveImage = function() {\n    var saveWindow = window.open('/savegraph.html');\n    saveWindow.onload = function() {\n      saveWindow.document.getElementById('graphPNG').src = graph.png();\n    };\n  };\n  var saveTemplate = function() {\n    var prettyDoc = JSON.stringify(JSON.parse(editor.getValue()), null, 2);\n    var blob = new Blob([prettyDoc], {type: 'text/plain;charset=utf-8'});\n    saveAs(blob, getTemplateDescription() + '.json');\n  };\n  var mainRow = document.getElementById('cfeditor');\n  mainRow.addEventListener('dragover', function(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n    evt.dataTransfer.dropEffect = 'copy';\n  }, false);\n  mainRow.addEventListener('drop', function(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    loadTemplate(evt.dataTransfer.files[0]);\n  }, false);\n  $('#open_template').change(function(event){ loadTemplate(event.target.files[0]); });\n  $('#save_template').click(function(event){ event.preventDefault(); saveTemplate(); return false;});\n  $('#save_graph').click(function(event){ event.preventDefault(); saveImage(); return false;});\n  $('#show_graph').click(function(event){ event.preventDefault(); showCyGraph(); return false;});\n  $('#close_graph').click(function(event){ event.preventDefault(); graphPane.fadeOut(500); return false;});\n  $('#graph_layout').change(function() { graph.layout( { 'name': $('#graph_layout').val() }); });\n})();\n","/* jshint devel:true */\n/* global exports */\n\n// findEdges/findIn\n//  - startElement element to traverse through\n//  - makeEdge     call back which expects a reference resource name and\n//                   title of the resource reference\n//  - title        resource title to push to callback function\n//\nexports.findEdges = function findIn (start, makeEdge, title) {\n  'use strict';\n  // If start is an array then let's loop through all elements to find edges\n  //\n  if (start instanceof Array) {\n    start.forEach(function(elem){\n      findIn(elem, makeEdge, title || '');\n    });\n  }\n  // Else if we hit some object and we should delve into it\n  //\n  else if (typeof start === 'object') {\n    // When we only have one key then it's probably some CloudFormation function\n    // we can use to make an make edge with\n    //\n    if (Object.keys(start).length === 1) {\n      var fn = Object.keys(start)[0];\n      // If we hit a Ref, it's definitely a reference of some sorts\n      // usually we only hit this option deep and the title should be available\n      // otherwise give an empty title\n      //\n      if (fn === 'Ref' && typeof start[fn] === 'string') {\n        makeEdge(start[fn], title || '', title);\n      }\n      // An Fn::Join is trickier, we might find edges recursively\n      //\n      else if (fn === 'Fn::Join' && start[fn] instanceof Array) {\n        start[fn][1].forEach(function(elem) {\n          findIn(elem, makeEdge, start[fn][1].join(start[fn][0]));\n        });\n      }\n      // If we see an Fn::GetAtt then make an edge with the reference,\n      // not the attribute\n      //\n      else if (fn === 'Fn::GetAtt' && start[fn] instanceof Array) {\n        makeEdge(start[fn][0], start[fn][1], title);\n      }\n      // Ok, forgot why this path is necessary, I guess it's when we didn't find\n      //  something to easily pull references from and we probably need to keep\n      //  searching anyway\n      //\n      else {\n        for (var key in start) {\n          findIn(start[key], makeEdge, key);\n        }\n      }\n    }\n    // if we have more than one key we have to delve deeper to find edges\n    //\n    else {\n      for (var k in start) {\n        findIn(start[k], makeEdge, k);\n      }\n    }\n  }\n};\n"],"sourceRoot":"/source/"}