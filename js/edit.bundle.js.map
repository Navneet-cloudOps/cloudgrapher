{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/collectdata.js","edit.bundle.js","app/scripts/edit.js","app/scripts/findedges.js","app/scripts/template.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","findEdges","graphOptions","nodes","brokenImage","edges","style","color.highlight","stabilize","zoomExtentOnStabilize","collectData","json","data","knownResources","possibleEdges","addEdge","toId","title","push","from","resourceKey","to","Resources","resource","props","Properties","group","Type","toLowerCase","replace","id","label","shape","image","filter","edge","indexOf","collectCyData","edgeFilters","AWS::EC2::SecurityGroupIngress","newTarget","source","target","AWS::EC2::SecurityGroupEgress","default","type","parent","get","awsType","this","edgeIndex","classes","./findedges",2,"myCodeMirror","CodeMirror","document","getElementById","value","lineNumbers","mode","foldGutter","gutters","lint","onUpdateLinting","annotations","template","refreshGraph","setSize","$","jsonp","ajax","url","dataType","success","responseText","changeStyle","isResizing","lastDownX","remoteInput","loadURL","fromURLInput","alertify","message","error","loadFile","file","load","name","reason","saveImage","saveWindow","window","open","onload","src","base64Image","saveTemplate","blob","Blob","text","saveAs","description","mainRow","addEventListener","evt","stopPropagation","preventDefault","dataTransfer","dropEffect","files","css","click","event","is","show","change","setLayout","val","keypress","which","container","left","right","handle","on","clientX","offsetRight","width","offset","graph","fit","./template",3,"findIn","start","makeEdge","Array","forEach","elem","Object","keys","fn","join","key","k",4,"codemirror","graphArea","cytolib","jsonproxy","collector","cyto","cytoscape","fail","reader","FileReader","setData","result","readAsText","onSuccess","onError","dataString","JSON","stringify","dataObject","parse","getDoc","setValue","elements","layout","padding","boxSelectionEnabled","Description","center","png","full","getValue","fromURL","corsSupport","textStatus","status","statusText","input","checkValidity","hide","indent","./collectdata"],"mappings":"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","file":"edit.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* jshint devel:true */\n/* global exports, require */\nvar findEdges = require('./findedges').findEdges;\nexports.graphOptions = {\n  'nodes': {\n    'brokenImage': 'images/unknown.png'\n  },\n  'edges': {\n    'style' : 'arrow',\n    'color.highlight': 'red'\n  },\n  'stabilize': true,\n  'zoomExtentOnStabilize': true\n};\nexports.collectData = function(json) {\n  'use strict';\n  var data = { nodes:[], edges:[] };\n  var knownResources = [];\n  var possibleEdges = [];\n  var addEdge = function (toId, title){\n    possibleEdges.push( {'from': resourceKey, 'to': toId, 'title': title } );\n  };\n  for (var resourceKey in json.Resources) {\n    var resource = json.Resources[resourceKey];\n    var props = resource.Properties;\n    var group = resource.Type.toLowerCase().replace(/::/g,'-');\n    knownResources.push(resourceKey);\n    data.nodes.push({\n      'id'   : resourceKey,\n      'label': resourceKey,\n      'group': group,\n      'shape': 'image',\n      'image': 'images/' + group + '.png'\n    });\n    findEdges(props, addEdge);\n  }\n  data.edges = possibleEdges.filter(function(edge) {\n    return edge && knownResources.indexOf(edge.to) >= 0;\n  });\n  return data;\n};\n\n\nexports.collectCyData = function(json) {\n  'use strict';\n  var edgeFilters = {\n    'AWS::EC2::SecurityGroupIngress': function(edge /*, source, target*/){\n      if (edge.data.resource === 'GroupId') {\n        // NOOP the direction is good\n      }\n      else if (edge.data.resource === 'SourceSecurityGroupId') {\n        var newTarget = edge.data.source;\n        edge.data.source = edge.data.target;\n        edge.data.target = newTarget;\n      }\n      return true;\n    },\n    'AWS::EC2::SecurityGroupEgress': function(edge /*, source, target*/) {\n      if (edge.data.resource === 'DestinationSecurityGroupId') {\n        // NOOP the direction is good\n      }\n      else if (edge.data.resource === 'GroupId') {\n        var newTarget = edge.data.source;\n        edge.data.source = edge.data.target;\n        edge.data.target = newTarget;\n      }\n      return true;\n    },\n    'default': function(edge, source, target) {\n      if (target && target.type === 'AWS::EC2::SecurityGroup' && source.type !== 'AWS::EC2::SecurityGroup'){\n        knownResources[edge.data.source].data.parent = edge.data.target;\n        return false;\n      }\n      return true;\n    },\n    'get': function(awsType) {\n      return this[awsType] || this['default'];\n    }\n  };\n  var data = { nodes:[], edges:[] };\n  var edgeIndex = 0;\n\n  var addEdge = function (toId, title, resource) {\n    possibleEdges.push({ data: { id: 'e'+ (edgeIndex++), source: resourceKey, target: toId, title: title, resource: resource }});\n  };\n\n  var knownResources = {};\n  var possibleEdges = [];\n\n  for (var resourceKey in json.Resources) {\n    var resource = json.Resources[resourceKey];\n    var r = {\n      data: {\n        id: resourceKey\n      },\n      classes: resource.Type.toLowerCase().replace(/::/g,'-'),\n      type: resource.Type\n    };\n    findEdges(resource.Properties, addEdge);\n    knownResources[resourceKey] = r;\n    data.nodes.push(r);\n  }\n\n  data.edges = possibleEdges.filter(function(edge) {\n    var source = knownResources[edge.data.source];\n    var target = knownResources[edge.data.target];\n    var filter = edgeFilters.get(source.type);\n    return edge && source && target && filter(edge, source, target);\n  });\n\n  return data;\n};\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* jshint devel:true */\n/* global exports, require */\nvar findEdges = require('./findedges').findEdges;\nexports.graphOptions = {\n  'nodes': {\n    'brokenImage': 'images/unknown.png'\n  },\n  'edges': {\n    'style' : 'arrow',\n    'color.highlight': 'red'\n  },\n  'stabilize': true,\n  'zoomExtentOnStabilize': true\n};\nexports.collectData = function(json) {\n  'use strict';\n  var data = { nodes:[], edges:[] };\n  var knownResources = [];\n  var possibleEdges = [];\n  var addEdge = function (toId, title){\n    possibleEdges.push( {'from': resourceKey, 'to': toId, 'title': title } );\n  };\n  for (var resourceKey in json.Resources) {\n    var resource = json.Resources[resourceKey];\n    var props = resource.Properties;\n    var group = resource.Type.toLowerCase().replace(/::/g,'-');\n    knownResources.push(resourceKey);\n    data.nodes.push({\n      'id'   : resourceKey,\n      'label': resourceKey,\n      'group': group,\n      'shape': 'image',\n      'image': 'images/' + group + '.png'\n    });\n    findEdges(props, addEdge);\n  }\n  data.edges = possibleEdges.filter(function(edge) {\n    return edge && knownResources.indexOf(edge.to) >= 0;\n  });\n  return data;\n};\n\n\nexports.collectCyData = function(json) {\n  'use strict';\n  var edgeFilters = {\n    'AWS::EC2::SecurityGroupIngress': function(edge /*, source, target*/){\n      if (edge.data.resource === 'GroupId') {\n        // NOOP the direction is good\n      }\n      else if (edge.data.resource === 'SourceSecurityGroupId') {\n        var newTarget = edge.data.source;\n        edge.data.source = edge.data.target;\n        edge.data.target = newTarget;\n      }\n      return true;\n    },\n    'AWS::EC2::SecurityGroupEgress': function(edge /*, source, target*/) {\n      if (edge.data.resource === 'DestinationSecurityGroupId') {\n        // NOOP the direction is good\n      }\n      else if (edge.data.resource === 'GroupId') {\n        var newTarget = edge.data.source;\n        edge.data.source = edge.data.target;\n        edge.data.target = newTarget;\n      }\n      return true;\n    },\n    'default': function(edge, source, target) {\n      if (target && target.type === 'AWS::EC2::SecurityGroup' && source.type !== 'AWS::EC2::SecurityGroup'){\n        knownResources[edge.data.source].data.parent = edge.data.target;\n        return false;\n      }\n      return true;\n    },\n    'get': function(awsType) {\n      return this[awsType] || this['default'];\n    }\n  };\n  var data = { nodes:[], edges:[] };\n  var edgeIndex = 0;\n\n  var addEdge = function (toId, title, resource) {\n    possibleEdges.push({ data: { id: 'e'+ (edgeIndex++), source: resourceKey, target: toId, title: title, resource: resource }});\n  };\n\n  var knownResources = {};\n  var possibleEdges = [];\n\n  for (var resourceKey in json.Resources) {\n    var resource = json.Resources[resourceKey];\n    var r = {\n      data: {\n        id: resourceKey\n      },\n      classes: resource.Type.toLowerCase().replace(/::/g,'-'),\n      type: resource.Type\n    };\n    findEdges(resource.Properties, addEdge);\n    knownResources[resourceKey] = r;\n    data.nodes.push(r);\n  }\n\n  data.edges = possibleEdges.filter(function(edge) {\n    var source = knownResources[edge.data.source];\n    var target = knownResources[edge.data.target];\n    var filter = edgeFilters.get(source.type);\n    return edge && source && target && filter(edge, source, target);\n  });\n\n  return data;\n};\n\n},{\"./findedges\":3}],2:[function(require,module,exports){\n/* jshint devel:true */\n/* global saveAs, require, CodeMirror, alertify */\n\n(function() {\n  'use strict';\n\n  var myCodeMirror = new CodeMirror(document.getElementById('editor'), {\n    value: '{}',\n    lineNumbers: true,\n    mode: 'application/json',\n    foldGutter: true,\n    gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\n    lint: {\n      onUpdateLinting: function(annotations) {\n        if (template && (!annotations || annotations.length === 0)) {\n          template.refreshGraph();\n        }\n      }\n    }\n  });\n  myCodeMirror.setSize('100%', '800px');\n  var template = require('./template').template(myCodeMirror, $('#graph_area'), $.jsonp);\n  $.ajax({\n    url: 'styles/main.cycss',\n    type: 'GET',\n    dataType: 'text',\n    success: function(responseText) {\n      template.changeStyle(responseText);\n    }\n  });\n  var isResizing = false,\n    lastDownX = 0;\n\n  var remoteInput = $('#remote_input');\n\n  var loadURL = function() {\n    template.fromURLInput(remoteInput,\n      function(url) {\n        alertify.success('Loaded URL \"' + url + '\" successfully');\n      },\n      function(url, message) {\n        alertify.error('Error while loading URL \"' + url + '\" :' + message);\n      }\n    );\n  };\n  var loadFile = function(file) {\n    template.load(\n      file,\n      function(name) {\n        alertify.success('Loaded file \"' + name + '\"');\n      },\n      function(name, reason) {\n        alertify.error('Unable to load file \"' + name + '\" because of ' + reason);\n      }\n    );\n  };\n\n  var saveImage = function() {\n    var saveWindow = window.open('savegraph.html');\n    saveWindow.onload = function() {\n      saveWindow.document.getElementById('graphPNG').src = template.base64Image();\n    };\n  };\n  var saveTemplate = function() {\n    var blob = new Blob([template.text(2)], {\n      type: 'text/plain;charset=utf-8'\n    });\n    saveAs(blob, template.description() + '.json');\n  };\n  var mainRow = document.getElementById('graph_area');\n  mainRow.addEventListener('dragover', function(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n    evt.dataTransfer.dropEffect = 'copy';\n  }, false);\n  mainRow.addEventListener('drop', function(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n    loadFile(evt.dataTransfer.files[0]);\n  }, false);\n  $('#graph_area').css('background-image', 'url(\"images/aws-cloudformation-template.svg\")');\n  $('#open_template').click(function(event) {\n    event.preventDefault();\n    $('#template_input').click();\n  });\n  $('#open_url').click(function(event) {\n    event.preventDefault();\n    if (remoteInput.is(':visible')) {\n      loadURL();\n    }\n    else {\n      remoteInput.show();\n    }\n  });\n  $('#template_input').change(function(event) {\n    loadFile(event.target.files[0]);\n  });\n  $('#save_template').click(function(event) {\n    event.preventDefault();\n    saveTemplate();\n    return false;\n  });\n  $('#save_graph').click(function(event) {\n    event.preventDefault();\n    saveImage();\n    return false;\n  });\n  $('#graph_layout').change(function() {\n    template.setLayout($('#graph_layout').val());\n  });\n\n  $('#remote_input').keypress(function(e) {\n    if (e.which === 13) {\n      loadURL();\n      return false;\n    }\n  });\n  var container = $('#container'),\n    left = $('#graph_area'),\n    right = $('#editor_pane'),\n    handle = $('#border');\n\n  handle.on('mousedown', function(e) {\n    isResizing = true;\n    lastDownX = e.clientX;\n  });\n\n  $(document).on('mousemove', function(e) {\n    // we don't want to do anything if we aren't resizing.\n    if (!isResizing) {\n      return;\n    }\n\n    var offsetRight = container.width() - (e.clientX - container.offset().left);\n\n    left.css('right', offsetRight);\n    right.css('width', offsetRight);\n  }).on('mouseup', function() {\n    if (isResizing) {\n      template.graph.fit();\n    }\n    // stop resizing\n    isResizing = false;\n  });\n})();\n\n},{\"./template\":4}],3:[function(require,module,exports){\n/* jshint devel:true */\n/* global exports */\n\n// findEdges/findIn\n//  - startElement element to traverse through\n//  - makeEdge     call back which expects a reference resource name and\n//                   title of the resource reference\n//  - title        resource title to push to callback function\n//\nexports.findEdges = function findIn (start, makeEdge, title) {\n  'use strict';\n  // If start is an array then let's loop through all elements to find edges\n  //\n  if (start instanceof Array) {\n    start.forEach(function(elem){\n      findIn(elem, makeEdge, title || '');\n    });\n  }\n  // Else if we hit some object and we should delve into it\n  //\n  else if (typeof start === 'object') {\n    // When we only have one key then it's probably some CloudFormation function\n    // we can use to make an make edge with\n    //\n    if (Object.keys(start).length === 1) {\n      var fn = Object.keys(start)[0];\n      // If we hit a Ref, it's definitely a reference of some sorts\n      // usually we only hit this option deep and the title should be available\n      // otherwise give an empty title\n      //\n      if (fn === 'Ref' && typeof start[fn] === 'string') {\n        makeEdge(start[fn], title || '', title);\n      }\n      // An Fn::Join is trickier, we might find edges recursively\n      //\n      else if (fn === 'Fn::Join' && start[fn] instanceof Array) {\n        start[fn][1].forEach(function(elem) {\n          findIn(elem, makeEdge, start[fn][1].join(start[fn][0]));\n        });\n      }\n      // If we see an Fn::GetAtt then make an edge with the reference,\n      // not the attribute\n      //\n      else if (fn === 'Fn::GetAtt' && start[fn] instanceof Array) {\n        makeEdge(start[fn][0], start[fn][1], title);\n      }\n      // Ok, forgot why this path is necessary, I guess it's when we didn't find\n      //  something to easily pull references from and we probably need to keep\n      //  searching anyway\n      //\n      else {\n        for (var key in start) {\n          findIn(start[key], makeEdge, key);\n        }\n      }\n    }\n    // if we have more than one key we have to delve deeper to find edges\n    //\n    else {\n      for (var k in start) {\n        findIn(start[k], makeEdge, k);\n      }\n    }\n  }\n};\n\n},{}],4:[function(require,module,exports){\n/* jshint devel:true */\n/* global exports, require, cytoscape */\n\nexports.template = function(codemirror, graphArea, cytolib, jsonproxy) {\n  'use strict';\n\n  var myCodeMirror = codemirror;\n  var collector = require('./collectdata');\n  var graph;\n  var style;\n  var cyto = cytolib || cytoscape;\n\n  var changeStyle = function(data) {\n    style = data;\n    if (graph) {\n      graph.style(style);\n    }\n  };\n\n  var load = function(file, success, fail) {\n    var reader = new FileReader();\n    reader.onload = function() {\n      setData(reader.result, function() {\n        if (success) {\n          success(file.name);\n        }\n      }, function(e) {\n        if (fail) {\n          fail(file.name, e);\n        }\n      });\n\n    };\n    reader.readAsText(file);\n  };\n\n  var setData = function(data, onSuccess, onError) {\n    if (data) {\n      try {\n        var dataString = typeof data === 'string' ? data : JSON.stringify(data, null, 2);\n        var dataObject = typeof data === 'object' ? data : JSON.parse(data);\n\n        myCodeMirror.getDoc().setValue(dataString);\n        show(collector.collectCyData(dataObject));\n        graphArea.css('background-image', '');\n        if (onSuccess) {\n          onSuccess();\n        }\n      }\n      catch (e) {\n        if (onError) {\n          onError('Error processing data as JSON', e);\n        }\n      }\n    }\n    else {\n      if (onError) {\n        onError('No data');\n      }\n    }\n  };\n\n  var refreshGraph = function(){\n    show(collector.collectCyData(json()));\n  };\n\n  var show = function(data) {\n    graph = cyto({\n      container: graphArea[0],\n      elements: data,\n      style: style,\n      layout: {\n        name: 'cose',\n        padding: 5\n      }\n    });\n    graph.boxSelectionEnabled(true);\n  };\n\n  var description = function() {\n    var description = 'template';\n    try {\n      description = json().Description;\n    }\n    catch (e) {}\n    return description;\n  };\n\n  var base64Image = function() {\n    if (!graph) {\n      return;\n    }\n    graph.center();\n    graph.fit();\n    return graph.png({\n      full: false\n    });\n  };\n\n  var json = function() {\n    return JSON.parse(myCodeMirror.getDoc().getValue());\n  };\n\n  var setLayout = function(name) {\n    if (graph) {\n      graph.layout({\n        'name': name\n      });\n    }\n  };\n\n  var fromURL = function(url, success, onError) {\n    if (url) {\n      jsonproxy({\n        url: url,\n        corsSupport: true,\n        success: function(data) {\n          setData(data);\n          if (success) {\n            success(url);\n          }\n        },\n        error: function(data, textStatus) {\n            var message;\n            if (textStatus === 'parsererror') {\n              myCodeMirror.getDoc().setValue(data.responseText);\n              message = 'Unable to parse the result as valid JSON';\n            }\n            else {\n              message = 'Unable to load: status ' + data.status + ' ' + data.statusText;\n            }\n            if (onError) {\n              onError(url, message, data, textStatus);\n            }\n          }\n          // error, etc.\n      });\n    }\n  };\n\n  var fromURLInput = function(input, onSuccess, onError) {\n    var url = input.val();\n    if (input[0].checkValidity()) {\n      input.hide();\n      fromURL(url, onSuccess, onError);\n    }\n    else {\n      return false;\n    }\n  };\n\n  var text = function(indent) {\n    return indent ? JSON.stringify(json(), null, indent) : myCodeMirror.getDoc().getValue();\n  };\n\n  return {\n    load: load,\n    setData: setData,\n    fromURLInput: fromURLInput,\n    fromURL: fromURL,\n    refreshGraph: refreshGraph,\n    setLayout: setLayout,\n    base64Image: base64Image,\n    description: description,\n    changeStyle: changeStyle,\n    graph: graph,\n    text: text,\n    json: json\n  };\n};\n\n},{\"./collectdata\":1}]},{},[2])\n\n","/* jshint devel:true */\n/* global saveAs, require, CodeMirror, alertify */\n\n(function() {\n  'use strict';\n\n  var myCodeMirror = new CodeMirror(document.getElementById('editor'), {\n    value: '{}',\n    lineNumbers: true,\n    mode: 'application/json',\n    foldGutter: true,\n    gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\n    lint: {\n      onUpdateLinting: function(annotations) {\n        if (template && (!annotations || annotations.length === 0)) {\n          template.refreshGraph();\n        }\n      }\n    }\n  });\n  myCodeMirror.setSize('100%', '800px');\n  var template = require('./template').template(myCodeMirror, $('#graph_area'), $.jsonp);\n  $.ajax({\n    url: 'styles/main.cycss',\n    type: 'GET',\n    dataType: 'text',\n    success: function(responseText) {\n      template.changeStyle(responseText);\n    }\n  });\n  var isResizing = false,\n    lastDownX = 0;\n\n  var remoteInput = $('#remote_input');\n\n  var loadURL = function() {\n    template.fromURLInput(remoteInput,\n      function(url) {\n        alertify.success('Loaded URL \"' + url + '\" successfully');\n      },\n      function(url, message) {\n        alertify.error('Error while loading URL \"' + url + '\" :' + message);\n      }\n    );\n  };\n  var loadFile = function(file) {\n    template.load(\n      file,\n      function(name) {\n        alertify.success('Loaded file \"' + name + '\"');\n      },\n      function(name, reason) {\n        alertify.error('Unable to load file \"' + name + '\" because of ' + reason);\n      }\n    );\n  };\n\n  var saveImage = function() {\n    var saveWindow = window.open('savegraph.html');\n    saveWindow.onload = function() {\n      saveWindow.document.getElementById('graphPNG').src = template.base64Image();\n    };\n  };\n  var saveTemplate = function() {\n    var blob = new Blob([template.text(2)], {\n      type: 'text/plain;charset=utf-8'\n    });\n    saveAs(blob, template.description() + '.json');\n  };\n  var mainRow = document.getElementById('graph_area');\n  mainRow.addEventListener('dragover', function(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n    evt.dataTransfer.dropEffect = 'copy';\n  }, false);\n  mainRow.addEventListener('drop', function(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n    loadFile(evt.dataTransfer.files[0]);\n  }, false);\n  $('#graph_area').css('background-image', 'url(\"images/aws-cloudformation-template.svg\")');\n  $('#open_template').click(function(event) {\n    event.preventDefault();\n    $('#template_input').click();\n  });\n  $('#open_url').click(function(event) {\n    event.preventDefault();\n    if (remoteInput.is(':visible')) {\n      loadURL();\n    }\n    else {\n      remoteInput.show();\n    }\n  });\n  $('#template_input').change(function(event) {\n    loadFile(event.target.files[0]);\n  });\n  $('#save_template').click(function(event) {\n    event.preventDefault();\n    saveTemplate();\n    return false;\n  });\n  $('#save_graph').click(function(event) {\n    event.preventDefault();\n    saveImage();\n    return false;\n  });\n  $('#graph_layout').change(function() {\n    template.setLayout($('#graph_layout').val());\n  });\n\n  $('#remote_input').keypress(function(e) {\n    if (e.which === 13) {\n      loadURL();\n      return false;\n    }\n  });\n  var container = $('#container'),\n    left = $('#graph_area'),\n    right = $('#editor_pane'),\n    handle = $('#border');\n\n  handle.on('mousedown', function(e) {\n    isResizing = true;\n    lastDownX = e.clientX;\n  });\n\n  $(document).on('mousemove', function(e) {\n    // we don't want to do anything if we aren't resizing.\n    if (!isResizing) {\n      return;\n    }\n\n    var offsetRight = container.width() - (e.clientX - container.offset().left);\n\n    left.css('right', offsetRight);\n    right.css('width', offsetRight);\n  }).on('mouseup', function() {\n    if (isResizing) {\n      template.graph.fit();\n    }\n    // stop resizing\n    isResizing = false;\n  });\n})();\n","/* jshint devel:true */\n/* global exports */\n\n// findEdges/findIn\n//  - startElement element to traverse through\n//  - makeEdge     call back which expects a reference resource name and\n//                   title of the resource reference\n//  - title        resource title to push to callback function\n//\nexports.findEdges = function findIn (start, makeEdge, title) {\n  'use strict';\n  // If start is an array then let's loop through all elements to find edges\n  //\n  if (start instanceof Array) {\n    start.forEach(function(elem){\n      findIn(elem, makeEdge, title || '');\n    });\n  }\n  // Else if we hit some object and we should delve into it\n  //\n  else if (typeof start === 'object') {\n    // When we only have one key then it's probably some CloudFormation function\n    // we can use to make an make edge with\n    //\n    if (Object.keys(start).length === 1) {\n      var fn = Object.keys(start)[0];\n      // If we hit a Ref, it's definitely a reference of some sorts\n      // usually we only hit this option deep and the title should be available\n      // otherwise give an empty title\n      //\n      if (fn === 'Ref' && typeof start[fn] === 'string') {\n        makeEdge(start[fn], title || '', title);\n      }\n      // An Fn::Join is trickier, we might find edges recursively\n      //\n      else if (fn === 'Fn::Join' && start[fn] instanceof Array) {\n        start[fn][1].forEach(function(elem) {\n          findIn(elem, makeEdge, start[fn][1].join(start[fn][0]));\n        });\n      }\n      // If we see an Fn::GetAtt then make an edge with the reference,\n      // not the attribute\n      //\n      else if (fn === 'Fn::GetAtt' && start[fn] instanceof Array) {\n        makeEdge(start[fn][0], start[fn][1], title);\n      }\n      // Ok, forgot why this path is necessary, I guess it's when we didn't find\n      //  something to easily pull references from and we probably need to keep\n      //  searching anyway\n      //\n      else {\n        for (var key in start) {\n          findIn(start[key], makeEdge, key);\n        }\n      }\n    }\n    // if we have more than one key we have to delve deeper to find edges\n    //\n    else {\n      for (var k in start) {\n        findIn(start[k], makeEdge, k);\n      }\n    }\n  }\n};\n","/* jshint devel:true */\n/* global exports, require, cytoscape */\n\nexports.template = function(codemirror, graphArea, cytolib, jsonproxy) {\n  'use strict';\n\n  var myCodeMirror = codemirror;\n  var collector = require('./collectdata');\n  var graph;\n  var style;\n  var cyto = cytolib || cytoscape;\n\n  var changeStyle = function(data) {\n    style = data;\n    if (graph) {\n      graph.style(style);\n    }\n  };\n\n  var load = function(file, success, fail) {\n    var reader = new FileReader();\n    reader.onload = function() {\n      setData(reader.result, function() {\n        if (success) {\n          success(file.name);\n        }\n      }, function(e) {\n        if (fail) {\n          fail(file.name, e);\n        }\n      });\n\n    };\n    reader.readAsText(file);\n  };\n\n  var setData = function(data, onSuccess, onError) {\n    if (data) {\n      try {\n        var dataString = typeof data === 'string' ? data : JSON.stringify(data, null, 2);\n        var dataObject = typeof data === 'object' ? data : JSON.parse(data);\n\n        myCodeMirror.getDoc().setValue(dataString);\n        show(collector.collectCyData(dataObject));\n        graphArea.css('background-image', '');\n        if (onSuccess) {\n          onSuccess();\n        }\n      }\n      catch (e) {\n        if (onError) {\n          onError('Error processing data as JSON', e);\n        }\n      }\n    }\n    else {\n      if (onError) {\n        onError('No data');\n      }\n    }\n  };\n\n  var refreshGraph = function(){\n    show(collector.collectCyData(json()));\n  };\n\n  var show = function(data) {\n    graph = cyto({\n      container: graphArea[0],\n      elements: data,\n      style: style,\n      layout: {\n        name: 'cose',\n        padding: 5\n      }\n    });\n    graph.boxSelectionEnabled(true);\n  };\n\n  var description = function() {\n    var description = 'template';\n    try {\n      description = json().Description;\n    }\n    catch (e) {}\n    return description;\n  };\n\n  var base64Image = function() {\n    if (!graph) {\n      return;\n    }\n    graph.center();\n    graph.fit();\n    return graph.png({\n      full: false\n    });\n  };\n\n  var json = function() {\n    return JSON.parse(myCodeMirror.getDoc().getValue());\n  };\n\n  var setLayout = function(name) {\n    if (graph) {\n      graph.layout({\n        'name': name\n      });\n    }\n  };\n\n  var fromURL = function(url, success, onError) {\n    if (url) {\n      jsonproxy({\n        url: url,\n        corsSupport: true,\n        success: function(data) {\n          setData(data);\n          if (success) {\n            success(url);\n          }\n        },\n        error: function(data, textStatus) {\n            var message;\n            if (textStatus === 'parsererror') {\n              myCodeMirror.getDoc().setValue(data.responseText);\n              message = 'Unable to parse the result as valid JSON';\n            }\n            else {\n              message = 'Unable to load: status ' + data.status + ' ' + data.statusText;\n            }\n            if (onError) {\n              onError(url, message, data, textStatus);\n            }\n          }\n          // error, etc.\n      });\n    }\n  };\n\n  var fromURLInput = function(input, onSuccess, onError) {\n    var url = input.val();\n    if (input[0].checkValidity()) {\n      input.hide();\n      fromURL(url, onSuccess, onError);\n    }\n    else {\n      return false;\n    }\n  };\n\n  var text = function(indent) {\n    return indent ? JSON.stringify(json(), null, indent) : myCodeMirror.getDoc().getValue();\n  };\n\n  return {\n    load: load,\n    setData: setData,\n    fromURLInput: fromURLInput,\n    fromURL: fromURL,\n    refreshGraph: refreshGraph,\n    setLayout: setLayout,\n    base64Image: base64Image,\n    description: description,\n    changeStyle: changeStyle,\n    graph: graph,\n    text: text,\n    json: json\n  };\n};\n"],"sourceRoot":"/source/"}